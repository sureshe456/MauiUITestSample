# Don't forget to add these secrets/build pipeline variables in your Azure Pipeline:
# - P12_PASSWORD: iOS only. The password for the P12 certificate file to sign the ipa file.
# - APPCENTER_TOKEN_ANDROID: App Center API key that can access the App Center Android app definition.
# - APPCENTER_TOKEN_IOS: App Center API key that can access the App Center iOS app definition.
# More information on the App Center API tokens can be found here: https://learn.microsoft.com/appcenter/api-docs/

# Replace these variables to match your project
variables:
    BuildConfiguration: Release
    DotNetVersion: 8.0.x 
    MauiCsprojToBuild: MauiUITestSample/MauiUITestSample.csproj
    UITestCsprojToBuild: MyAppTests/MyAppTests.csproj

    # Should match the values for the TargetFrameworks node in the .NET MAUI csproj file. Also make sure this matches DotNetVersion.
    TfmPrefix: net8.0

    # Find this in the ApplicationId node in the .NET MAUI csproj file
    AppId: com.companyname.mauiuitestsample

    # App Center configuration
    AndroidTestDevices: ff8f571c
    AndroidAppDefinition: xtc-Xamarin-Forms/MauiTest
    AndroidTestSeries: master

    iOSTestDevices: 1f1515d2
    iOSAppDefinition: xtc-Xamarin-Forms/MauiTest-iOS
    iOSTestSeries: master

    # These values correspond to files that are uploaded to the Azure Pipeline secure files. Make sure the filenames match here with the uploaded files.
    # More information about using secure files can be found here: https://learn.microsoft.com/azure/devops/pipelines/library/secure-files
    # More information about obtaining a P12 and provisioning profile file can be found here: https://learn.microsoft.com/dotnet/maui/ios/deployment/publish-app-store
    P12_SECURE_FILENAME: Certificates.p12
    PROVISIONING_PROFILE_SECURE_FILENAME: MauiUITest.mobileprovision

trigger: none

stages:
- stage: Build_And_UITest_Android
  jobs:
  - job: Build_And_UITest_Android
    displayName: Build .NET MAUI Android App
    pool:
      vmImage: 'windows-latest'
      demands:
      - MSBuild
      
    steps:
    - task: UseDotNet@2
      displayName: Install .NET
      inputs:
        packageType: 'sdk'
        version: '$(DotNetVersion)'

    # Setup JDK Paths
    - bash: |
        echo "##vso[task.setvariable variable=JI_JAVA_HOME]$(JAVA_HOME_11_X64)"
      displayName: 'Setup JDK Paths'

    - task: CmdLine@2
      displayName: Install .NET MAUI Workload
      inputs:
        script: dotnet workload install maui

    - task: CmdLine@2
      displayName: Restore NuGet Packages
      inputs:
        script: dotnet restore

    - task: CmdLine@2
      displayName: Publish .NET MAUI App
      inputs:
        script: dotnet publish $(MauiCsprojToBuild) -c $(BuildConfiguration) -f $(TfmPrefix)-android -o $(Build.ArtifactStagingDirectory)

    - task: CmdLine@2
      displayName: Build UI Test Project
      inputs:
        script: dotnet build $(UITestCsprojToBuild) -c $(BuildConfiguration)

    - task: CmdLine@2
      displayName: Install App Center CLI
      inputs:
        script: npm install --location=global appcenter-cli

    - task: CmdLine@2
      displayName: Upload App to Test Cloud
      inputs:
        script: appcenter test run uitest --app "$(AndroidAppDefinition)" --devices $(AndroidTestDevices) --app-path "$(Build.ArtifactStagingDirectory)\\$(AppId)-Signed.apk" --test-series "$(AndroidTestSeries)" --build-dir "MyAppTests/bin/$(BuildConfiguration)/net48/" --uitest-tools-dir "MyAppTests/bin/$(BuildConfiguration)/net48/" --token "$(APPCENTER_TOKEN_ANDROID)" --async

- stage: Build_And_UITest_iOS
  dependsOn: []
  jobs:
    - job: Build_And_UITest_iOS
      displayName: Build .NET MAUI iOS App
      pool:
        vmImage: 'macos-latest'
      
      steps:
      - task: InstallAppleCertificate@2
        displayName: Install iOS App P12 Certificate
        inputs:
          certSecureFile: '$(P12_SECURE_FILENAME)'
          certPwd: '$(P12_PASSWORD)'
          keychain: 'temp'

      - task: InstallAppleProvisioningProfile@1
        displayName: Install iOS App Provisioning Profile
        inputs:
          provisioningProfileLocation: 'secureFiles'
          provProfileSecureFile: '$(PROVISIONING_PROFILE_SECURE_FILENAME)'

      - task: UseDotNet@2
        displayName: Install .NET
        inputs:
          packageType: 'sdk'
          version: '$(DotNetVersion)'
      
      - task: Bash@3
        displayName: Install .NET MAUI Workload
        inputs:
          targetType: 'inline'
          script: dotnet workload install maui
      
      - task: Bash@3
        displayName: Restore NuGet Packages
        inputs:
          targetType: 'inline'
          script: dotnet restore

      - task: Bash@3
        displayName: Publish .NET MAUI iOS App
        inputs:
          targetType: 'inline'
          script: dotnet publish $(MauiCsprojToBuild) -c $(BuildConfiguration) -f $(TfmPrefix)-ios -o $(Build.ArtifactStagingDirectory)

      - task: Bash@3
        displayName: Build UI Test Project
        inputs:
          targetType: 'inline'
          script: dotnet build $(UITestCsprojToBuild) -c $(BuildConfiguration)

      - task: Bash@3
        displayName: Install App Center CLI
        inputs:
          targetType: 'inline'
          script: npm install --location=global appcenter-cli

      - task: Bash@3
        displayName: Upload App to Test Cloud
        inputs:
          targetType: 'inline'
          script: appcenter test run uitest --app "$(iOSAppDefinition)" --devices $(iOSTestDevices) --app-path "$(Build.ArtifactStagingDirectory)/MauiUITestSample.ipa" --test-series "$(iOSTestSeries)" --build-dir "MyAppTests/bin/$(BuildConfiguration)/net48/" --uitest-tools-dir "MyAppTests/bin/$(BuildConfiguration)/net48/" --token "$(APPCENTER_TOKEN_IOS)" --async
